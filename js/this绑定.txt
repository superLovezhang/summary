this绑定取决于调用的上下文对象，而不是定义


1.默认绑定
  # 一个函数function 调用的时候 this默认绑定为window即全局作用域


2.隐式绑定
  # 在一个对象obj里引用一个函数fun 调用Obj.fun的时候 this绑定为obj对象

3.显示绑定
  # 一个函数通过apply,call调用，this的指向为其参数对象
  ## 通过bind返回一个函数，this指向参数对象


4.new绑定
  # 通过构造函数new出来的对象，构造函数里的this绑定到new的对象上
  ## new的过程
     > 首先在构造函数的原型上prototype上创建对应的属性
     >> 其次创建一个对象，并把这个对象的__proto__指向构造函数的原型prototype
     >>> 再然后返回这个对象赋值
	 

5.总结
  # 函数this的绑定只能由调用他的对象决定(就是点前面的对象)
  ## 如果没有隐式显示和new绑定 函数的上下文默认为window 
  ### var that = this 这里的that代表了这个父函数被调用时的上下文，又因为作用域链子函数可以访问父函数的      属性，that能正常访问父函数的上下文，但是子函数的this依然是window